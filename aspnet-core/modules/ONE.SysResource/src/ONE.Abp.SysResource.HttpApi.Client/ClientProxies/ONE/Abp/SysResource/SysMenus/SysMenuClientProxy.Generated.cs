// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using ONE.Abp.Pagination.Contracts.Dtos;
using ONE.Abp.SysResource.SysMenus;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace ONE.Abp.SysResource.SysMenus;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ISysMenuAppService), typeof(SysMenuClientProxy))]
public partial class SysMenuClientProxy : ClientProxyBase<ISysMenuAppService>, ISysMenuAppService
{
    public virtual async Task CreateAsync(SysMenuCreateInput input)
    {
        await RequestAsync(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(SysMenuCreateInput), input }
        });
    }

    public virtual async Task UpdateAsync(Guid id, SysMenuUpdateInput input)
    {
        await RequestAsync(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(SysMenuUpdateInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<SysMenuDto> GetAsync(Guid id)
    {
        return await RequestAsync<SysMenuDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResult<SysMenuDto>> QueryPageAsync(SysMenuQuery input)
    {
        return await RequestAsync<PagedResult<SysMenuDto>>(nameof(QueryPageAsync), new ClientProxyRequestTypeValue
        {
            { typeof(SysMenuQuery), input }
        });
    }

    public virtual async Task<ListResultDto<SysMenuDto>> GetListByAppCodeAsync(string appCode)
    {
        return await RequestAsync<ListResultDto<SysMenuDto>>(nameof(GetListByAppCodeAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), appCode }
        });
    }

    public virtual async Task<ListResultDto<SysMenuDto>> GetListByAppIdAsync(Guid appId)
    {
        return await RequestAsync<ListResultDto<SysMenuDto>>(nameof(GetListByAppIdAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), appId }
        });
    }
}
