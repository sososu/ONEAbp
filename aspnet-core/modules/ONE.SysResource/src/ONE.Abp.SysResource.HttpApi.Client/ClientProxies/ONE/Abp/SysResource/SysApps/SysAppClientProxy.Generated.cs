// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using ONE.Abp.Pagination.Contracts.Dtos;
using ONE.Abp.SysResource.SysApps;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace ONE.Abp.SysResource.SysApps;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ISysAppAppService), typeof(SysAppClientProxy))]
public partial class SysAppClientProxy : ClientProxyBase<ISysAppAppService>, ISysAppAppService
{
    public virtual async Task CreateAsync(SysAppCreateInput input)
    {
        await RequestAsync(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(SysAppCreateInput), input }
        });
    }

    public virtual async Task UpdateAsync(Guid id, SysAppUpdateInput input)
    {
        await RequestAsync(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(SysAppUpdateInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<SysAppDto> GetAsync(Guid id)
    {
        return await RequestAsync<SysAppDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResult<SysAppDto>> QueryPageAsync(SysAppQuery input)
    {
        return await RequestAsync<PagedResult<SysAppDto>>(nameof(QueryPageAsync), new ClientProxyRequestTypeValue
        {
            { typeof(SysAppQuery), input }
        });
    }
}
